/* EXERCISE 2 (Using a class 1p)
We need to write an application, which reads two times (times are represented by two int numbers: hours and minutes). 
Then the program finds out which time is later. After that it calculates the time difference between these times. 
Finally the program displays the smaller (earlier) time and the time difference (duration) in the format
  starting time was 11:22 
  duration was 1:04 */
  
#include <iostream>
#include <cmath>
#include <time.h>
using namespace std;
class Time {
private:
	int hour, min;
public:
	Time();
	Time(int hour0, int min0);
	void read(const char* string);
	bool lessThan(Time time2);
	Time subtract(Time time2);
	void display();
};

Time::Time() {
}

Time::Time(int hour0, int min0) {
	hour = hour0;
	min = min0;
}

void Time::read(const char *string) {
	char c;
		cout << string << " ";
		cin >> hour >> c >> min;
}

bool Time::lessThan(Time time2) {
	if (hour < time2.hour) {
		return true;
	}
	else if (hour == time2.hour) {
		if (min < time2.min) {
			return true;
		}
		else {
			return false;
		}
	}
	else {
		return false;
	}
}

Time Time::subtract(Time time2) {
	Time time1;
	if (min < time2.min) {
		time1.min = min + 60 - time2.min;
		time1.hour = hour - time2.hour - 1;
	}
	else {
		time1.min = min - time2.min;
		time1.hour = hour - time2.hour;
	}
	return time1;
}

void Time::display() {
	cout << hour << ":" << min;
}

int main() {
	Time time1, time2, duration; 
	time1.read("Enter time 1:");
	time2.read("Enter time 2:");
	if (time1.lessThan(time2)) {
		duration = time2.subtract(time1);
		cout << "\nStarting time was ";
		time1.display();
	}
	else {
		duration = time1.subtract(time2);
		cout << "\nStarting time was ";
		time2.display();
	}
	cout << "\nDuration was ";
	duration.display();
}
  
